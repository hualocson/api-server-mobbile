// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  role      Role          @default(USER)
  email     String        @unique
  firstName String
  lastName  String
  phone     String
  password  String
  avatar    String        @default("https://res.cloudinary.com/dq3yexsrd/image/upload/v1681562228/mobileapp/user/user-avatar-base.png")
  addresses Address[]
  gender    Gender?       @default(UNKNOWN)
  cart      ShoppingCart?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

enum Gender {
  MALE
  FEMALE
  OTHER
  UNKNOWN
}

model Address {
  id             Int      @id @default(autoincrement())
  name           String
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  street         String
  city           String
  state          String
  zip            String
  addressDetails String
  isDefault      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

model ProductCategory {
  id           Int         @id @default(autoincrement())
  categoryName String
  icUrl        String      @default("https://res.cloudinary.com/dq3yexsrd/image/upload/v1681562452/mobileapp/category/ic-category-base.png")
  products     Product[]
  variations   Variation[]
}

model Product {
  id           Int             @id @default(autoincrement())
  category     ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId   Int
  name         String
  description  String
  productImage String
  productItems ProductItem[]
}

model ProductItem {
  id                    Int                    @id @default(autoincrement())
  product               Product                @relation(fields: [productId], references: [id])
  productId             Int
  qtyInStock            Int
  price                 Int
  productImage          String
  productConfigurations ProductConfiguration[]
  shoppingCartItems     ShoppingCartItem[]
}

model Variation {
  id               Int               @id @default(autoincrement())
  category         ProductCategory   @relation(fields: [categoryId], references: [id])
  categoryId       Int
  name             String
  variationOptions VariationOption[]
}

model VariationOption {
  id                    Int                    @id @default(autoincrement())
  variation             Variation              @relation(fields: [variationId], references: [id])
  variationId           Int
  value                 String
  productConfigurations ProductConfiguration[]
}

model ProductConfiguration {
  productItem       ProductItem     @relation(fields: [productItemId], references: [id])
  productItemId     Int
  variationOption   VariationOption @relation(fields: [variationOptionId], references: [id])
  variationOptionId Int

  @@id([productItemId, variationOptionId])
}

model ShoppingCart {
  id                Int                @id @default(autoincrement())
  user              User               @relation(fields: [userId], references: [id])
  userId            Int                @unique
  shoppingCartItems ShoppingCartItem[]
}

model ShoppingCartItem {
  id             Int          @id @default(autoincrement())
  shoppingCart   ShoppingCart @relation(fields: [shoppingCartId], references: [id])
  shoppingCartId Int
  productItem    ProductItem  @relation(fields: [productItemId], references: [id])
  productItemId  Int
  qty            Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
